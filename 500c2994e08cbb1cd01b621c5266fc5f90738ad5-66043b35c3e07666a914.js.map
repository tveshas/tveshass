{"version":3,"file":"500c2994e08cbb1cd01b621c5266fc5f90738ad5-66043b35c3e07666a914.js","mappings":"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","sources":["webpack://portfolio/./node_modules/camelcase/index.js","webpack://portfolio/./node_modules/common-tags/es/TemplateTag/TemplateTag.js","webpack://portfolio/./node_modules/common-tags/es/inlineArrayTransformer/inlineArrayTransformer.js","webpack://portfolio/./node_modules/common-tags/es/stripIndentTransformer/stripIndentTransformer.js","webpack://portfolio/./node_modules/common-tags/es/trimResultTransformer/trimResultTransformer.js","webpack://portfolio/./node_modules/common-tags/es/splitStringTransformer/splitStringTransformer.js","webpack://portfolio/./node_modules/common-tags/es/commaLists/commaLists.js","webpack://portfolio/./node_modules/common-tags/es/commaListsAnd/commaListsAnd.js","webpack://portfolio/./node_modules/common-tags/es/commaListsOr/commaListsOr.js","webpack://portfolio/./node_modules/common-tags/es/removeNonPrintingValuesTransformer/removeNonPrintingValuesTransformer.js","webpack://portfolio/./node_modules/common-tags/es/replaceSubstitutionTransformer/replaceSubstitutionTransformer.js","webpack://portfolio/./node_modules/common-tags/es/html/html.js","webpack://portfolio/./node_modules/common-tags/es/replaceResultTransformer/replaceResultTransformer.js","webpack://portfolio/./node_modules/common-tags/es/safeHtml/safeHtml.js","webpack://portfolio/./node_modules/common-tags/es/oneLine/oneLine.js","webpack://portfolio/./node_modules/common-tags/es/oneLineTrim/oneLineTrim.js","webpack://portfolio/./node_modules/common-tags/es/oneLineCommaLists/oneLineCommaLists.js","webpack://portfolio/./node_modules/common-tags/es/oneLineCommaListsOr/oneLineCommaListsOr.js","webpack://portfolio/./node_modules/common-tags/es/oneLineCommaListsAnd/oneLineCommaListsAnd.js","webpack://portfolio/./node_modules/common-tags/es/inlineLists/inlineLists.js","webpack://portfolio/./node_modules/common-tags/es/oneLineInlineLists/oneLineInlineLists.js","webpack://portfolio/./node_modules/common-tags/es/stripIndent/stripIndent.js","webpack://portfolio/./node_modules/common-tags/es/stripIndents/stripIndents.js","webpack://portfolio/../src/image-utils.ts","webpack://portfolio/../src/components/hooks.ts","webpack://portfolio/../src/components/layout-wrapper.tsx","webpack://portfolio/../src/components/picture.tsx","webpack://portfolio/../src/components/placeholder.tsx","webpack://portfolio/../src/components/main-image.tsx","webpack://portfolio/../src/components/gatsby-image.server.tsx","webpack://portfolio/../src/components/gatsby-image.browser.tsx","webpack://portfolio/../src/components/static-image.server.tsx","webpack://portfolio/../src/components/static-image.tsx","webpack://portfolio/./src/components/header/index.jsx","webpack://portfolio/./node_modules/lodash/_Hash.js","webpack://portfolio/./node_modules/lodash/_ListCache.js","webpack://portfolio/./node_modules/lodash/_Map.js","webpack://portfolio/./node_modules/lodash/_MapCache.js","webpack://portfolio/./node_modules/lodash/_Symbol.js","webpack://portfolio/./node_modules/lodash/_arrayMap.js","webpack://portfolio/./node_modules/lodash/_assocIndexOf.js","webpack://portfolio/./node_modules/lodash/_baseGet.js","webpack://portfolio/./node_modules/lodash/_baseGetTag.js","webpack://portfolio/./node_modules/lodash/_baseIsNative.js","webpack://portfolio/./node_modules/lodash/_baseToString.js","webpack://portfolio/./node_modules/lodash/_castPath.js","webpack://portfolio/./node_modules/lodash/_coreJsData.js","webpack://portfolio/./node_modules/lodash/_freeGlobal.js","webpack://portfolio/./node_modules/lodash/_getMapData.js","webpack://portfolio/./node_modules/lodash/_getNative.js","webpack://portfolio/./node_modules/lodash/_getRawTag.js","webpack://portfolio/./node_modules/lodash/_getValue.js","webpack://portfolio/./node_modules/lodash/_hashClear.js","webpack://portfolio/./node_modules/lodash/_hashDelete.js","webpack://portfolio/./node_modules/lodash/_hashGet.js","webpack://portfolio/./node_modules/lodash/_hashHas.js","webpack://portfolio/./node_modules/lodash/_hashSet.js","webpack://portfolio/./node_modules/lodash/_isKey.js","webpack://portfolio/./node_modules/lodash/_isKeyable.js","webpack://portfolio/./node_modules/lodash/_isMasked.js","webpack://portfolio/./node_modules/lodash/_listCacheClear.js","webpack://portfolio/./node_modules/lodash/_listCacheDelete.js","webpack://portfolio/./node_modules/lodash/_listCacheGet.js","webpack://portfolio/./node_modules/lodash/_listCacheHas.js","webpack://portfolio/./node_modules/lodash/_listCacheSet.js","webpack://portfolio/./node_modules/lodash/_mapCacheClear.js","webpack://portfolio/./node_modules/lodash/_mapCacheDelete.js","webpack://portfolio/./node_modules/lodash/_mapCacheGet.js","webpack://portfolio/./node_modules/lodash/_mapCacheHas.js","webpack://portfolio/./node_modules/lodash/_mapCacheSet.js","webpack://portfolio/./node_modules/lodash/_memoizeCapped.js","webpack://portfolio/./node_modules/lodash/_nativeCreate.js","webpack://portfolio/./node_modules/lodash/_objectToString.js","webpack://portfolio/./node_modules/lodash/_root.js","webpack://portfolio/./node_modules/lodash/_stringToPath.js","webpack://portfolio/./node_modules/lodash/_toKey.js","webpack://portfolio/./node_modules/lodash/_toSource.js","webpack://portfolio/./node_modules/lodash/eq.js","webpack://portfolio/./node_modules/lodash/get.js","webpack://portfolio/./node_modules/lodash/isArray.js","webpack://portfolio/./node_modules/lodash/isFunction.js","webpack://portfolio/./node_modules/lodash/isObject.js","webpack://portfolio/./node_modules/lodash/isObjectLike.js","webpack://portfolio/./node_modules/lodash/isSymbol.js","webpack://portfolio/./node_modules/lodash/memoize.js","webpack://portfolio/./node_modules/lodash/toString.js"],"sourcesContent":["'use strict';\n\nconst preserveCamelCase = string => {\n  let isLastCharLower = false;\n  let isLastCharUpper = false;\n  let isLastLastCharUpper = false;\n  for (let i = 0; i < string.length; i++) {\n    const character = string[i];\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n  return string;\n};\nconst camelCase = (input, options) => {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n  const postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  if (Array.isArray(input)) {\n    input = input.map(x => x.trim()).filter(x => x.length).join('-');\n  } else {\n    input = input.trim();\n  }\n  if (input.length === 0) {\n    return '';\n  }\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n  const hasUpperCase = input !== input.toLowerCase();\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase()).replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n  return postProcess(input);\n};\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;","var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _templateObject = _taggedTemplateLiteral(['', ''], ['', '']);\nfunction _taggedTemplateLiteral(strings, raw) {\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\n/**\n * @class TemplateTag\n * @classdesc Consumes a pipeline of composable transformer plugins and produces a template tag.\n */\nvar TemplateTag = function () {\n  /**\n   * constructs a template tag\n   * @constructs TemplateTag\n   * @param  {...Object} [...transformers] - an array or arguments list of transformers\n   * @return {Function}                    - a template tag\n   */\n  function TemplateTag() {\n    var _this = this;\n    for (var _len = arguments.length, transformers = Array(_len), _key = 0; _key < _len; _key++) {\n      transformers[_key] = arguments[_key];\n    }\n    _classCallCheck(this, TemplateTag);\n    this.tag = function (strings) {\n      for (var _len2 = arguments.length, expressions = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        expressions[_key2 - 1] = arguments[_key2];\n      }\n      if (typeof strings === 'function') {\n        // if the first argument passed is a function, assume it is a template tag and return\n        // an intermediary tag that processes the template using the aforementioned tag, passing the\n        // result to our tag\n        return _this.interimTag.bind(_this, strings);\n      }\n      if (typeof strings === 'string') {\n        // if the first argument passed is a string, just transform it\n        return _this.transformEndResult(strings);\n      }\n\n      // else, return a transformed end result of processing the template with our tag\n      strings = strings.map(_this.transformString.bind(_this));\n      return _this.transformEndResult(strings.reduce(_this.processSubstitutions.bind(_this, expressions)));\n    };\n\n    // if first argument is an array, extrude it as a list of transformers\n    if (transformers.length > 0 && Array.isArray(transformers[0])) {\n      transformers = transformers[0];\n    }\n\n    // if any transformers are functions, this means they are not initiated - automatically initiate them\n    this.transformers = transformers.map(function (transformer) {\n      return typeof transformer === 'function' ? transformer() : transformer;\n    });\n\n    // return an ES2015 template tag\n    return this.tag;\n  }\n\n  /**\n   * Applies all transformers to a template literal tagged with this method.\n   * If a function is passed as the first argument, assumes the function is a template tag\n   * and applies it to the template, returning a template tag.\n   * @param  {(Function|String|Array<String>)} strings        - Either a template tag or an array containing template strings separated by identifier\n   * @param  {...*}                            ...expressions - Optional list of substitution values.\n   * @return {(String|Function)}                              - Either an intermediary tag function or the results of processing the template.\n   */\n\n  _createClass(TemplateTag, [{\n    key: 'interimTag',\n    /**\n     * An intermediary template tag that receives a template tag and passes the result of calling the template with the received\n     * template tag to our own template tag.\n     * @param  {Function}        nextTag          - the received template tag\n     * @param  {Array<String>}   template         - the template to process\n     * @param  {...*}            ...substitutions - `substitutions` is an array of all substitutions in the template\n     * @return {*}                                - the final processed value\n     */\n    value: function interimTag(previousTag, template) {\n      for (var _len3 = arguments.length, substitutions = Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n        substitutions[_key3 - 2] = arguments[_key3];\n      }\n      return this.tag(_templateObject, previousTag.apply(undefined, [template].concat(substitutions)));\n    }\n\n    /**\n     * Performs bulk processing on the tagged template, transforming each substitution and then\n     * concatenating the resulting values into a string.\n     * @param  {Array<*>} substitutions - an array of all remaining substitutions present in this template\n     * @param  {String}   resultSoFar   - this iteration's result string so far\n     * @param  {String}   remainingPart - the template chunk after the current substitution\n     * @return {String}                 - the result of joining this iteration's processed substitution with the result\n     */\n  }, {\n    key: 'processSubstitutions',\n    value: function processSubstitutions(substitutions, resultSoFar, remainingPart) {\n      var substitution = this.transformSubstitution(substitutions.shift(), resultSoFar);\n      return ''.concat(resultSoFar, substitution, remainingPart);\n    }\n\n    /**\n     * Iterate through each transformer, applying the transformer's `onString` method to the template\n     * strings before all substitutions are processed.\n     * @param {String}  str - The input string\n     * @return {String}     - The final results of processing each transformer\n     */\n  }, {\n    key: 'transformString',\n    value: function transformString(str) {\n      var cb = function cb(res, transform) {\n        return transform.onString ? transform.onString(res) : res;\n      };\n      return this.transformers.reduce(cb, str);\n    }\n\n    /**\n     * When a substitution is encountered, iterates through each transformer and applies the transformer's\n     * `onSubstitution` method to the substitution.\n     * @param  {*}      substitution - The current substitution\n     * @param  {String} resultSoFar  - The result up to and excluding this substitution.\n     * @return {*}                   - The final result of applying all substitution transformations.\n     */\n  }, {\n    key: 'transformSubstitution',\n    value: function transformSubstitution(substitution, resultSoFar) {\n      var cb = function cb(res, transform) {\n        return transform.onSubstitution ? transform.onSubstitution(res, resultSoFar) : res;\n      };\n      return this.transformers.reduce(cb, substitution);\n    }\n\n    /**\n     * Iterates through each transformer, applying the transformer's `onEndResult` method to the\n     * template literal after all substitutions have finished processing.\n     * @param  {String} endResult - The processed template, just before it is returned from the tag\n     * @return {String}           - The final results of processing each transformer\n     */\n  }, {\n    key: 'transformEndResult',\n    value: function transformEndResult(endResult) {\n      var cb = function cb(res, transform) {\n        return transform.onEndResult ? transform.onEndResult(res) : res;\n      };\n      return this.transformers.reduce(cb, endResult);\n    }\n  }]);\n  return TemplateTag;\n}();\nexport default TemplateTag;","var defaults = {\n  separator: '',\n  conjunction: '',\n  serial: false\n};\n\n/**\n * Converts an array substitution to a string containing a list\n * @param  {String} [opts.separator = ''] - the character that separates each item\n * @param  {String} [opts.conjunction = '']  - replace the last separator with this\n * @param  {Boolean} [opts.serial = false] - include the separator before the conjunction? (Oxford comma use-case)\n *\n * @return {Object}                     - a TemplateTag transformer\n */\nvar inlineArrayTransformer = function inlineArrayTransformer() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaults;\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      // only operate on arrays\n      if (Array.isArray(substitution)) {\n        var arrayLength = substitution.length;\n        var separator = opts.separator;\n        var conjunction = opts.conjunction;\n        var serial = opts.serial;\n        // join each item in the array into a string where each item is separated by separator\n        // be sure to maintain indentation\n        var indent = resultSoFar.match(/(\\n?[^\\S\\n]+)$/);\n        if (indent) {\n          substitution = substitution.join(separator + indent[1]);\n        } else {\n          substitution = substitution.join(separator + ' ');\n        }\n        // if conjunction is set, replace the last separator with conjunction, but only if there is more than one substitution\n        if (conjunction && arrayLength > 1) {\n          var separatorIndex = substitution.lastIndexOf(separator);\n          substitution = substitution.slice(0, separatorIndex) + (serial ? separator : '') + ' ' + conjunction + substitution.slice(separatorIndex + 1);\n        }\n      }\n      return substitution;\n    }\n  };\n};\nexport default inlineArrayTransformer;","function _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\n/**\n * strips indentation from a template literal\n * @param  {String} type = 'initial' - whether to remove all indentation or just leading indentation. can be 'all' or 'initial'\n * @return {Object}                  - a TemplateTag transformer\n */\nvar stripIndentTransformer = function stripIndentTransformer() {\n  var type = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'initial';\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (type === 'initial') {\n        // remove the shortest leading indentation from each line\n        var match = endResult.match(/^[^\\S\\n]*(?=\\S)/gm);\n        var indent = match && Math.min.apply(Math, _toConsumableArray(match.map(function (el) {\n          return el.length;\n        })));\n        if (indent) {\n          var regexp = new RegExp('^.{' + indent + '}', 'gm');\n          return endResult.replace(regexp, '');\n        }\n        return endResult;\n      }\n      if (type === 'all') {\n        // remove all indentation from each line\n        return endResult.replace(/^[^\\S\\n]+/gm, '');\n      }\n      throw new Error('Unknown type: ' + type);\n    }\n  };\n};\nexport default stripIndentTransformer;","/**\n * TemplateTag transformer that trims whitespace on the end result of a tagged template\n * @param  {String} side = '' - The side of the string to trim. Can be 'start' or 'end' (alternatively 'left' or 'right')\n * @return {Object}           - a TemplateTag transformer\n */\nvar trimResultTransformer = function trimResultTransformer() {\n  var side = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (side === '') {\n        return endResult.trim();\n      }\n      side = side.toLowerCase();\n      if (side === 'start' || side === 'left') {\n        return endResult.replace(/^\\s*/, '');\n      }\n      if (side === 'end' || side === 'right') {\n        return endResult.replace(/\\s*$/, '');\n      }\n      throw new Error('Side not supported: ' + side);\n    }\n  };\n};\nexport default trimResultTransformer;","var splitStringTransformer = function splitStringTransformer(splitBy) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (splitBy != null && typeof splitBy === 'string') {\n        if (typeof substitution === 'string' && substitution.includes(splitBy)) {\n          substitution = substitution.split(splitBy);\n        }\n      } else {\n        throw new Error('You need to specify a string character to split by.');\n      }\n      return substitution;\n    }\n  };\n};\nexport default splitStringTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaLists = new TemplateTag(inlineArrayTransformer({\n  separator: ','\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaLists;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaListsAnd = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'and'\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaListsAnd;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar commaListsOr = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'or'\n}), stripIndentTransformer, trimResultTransformer);\nexport default commaListsOr;","var isValidValue = function isValidValue(x) {\n  return x != null && !Number.isNaN(x) && typeof x !== 'boolean';\n};\nvar removeNonPrintingValuesTransformer = function removeNonPrintingValuesTransformer() {\n  return {\n    onSubstitution: function onSubstitution(substitution) {\n      if (Array.isArray(substitution)) {\n        return substitution.filter(isValidValue);\n      }\n      if (isValidValue(substitution)) {\n        return substitution;\n      }\n      return '';\n    }\n  };\n};\nexport default removeNonPrintingValuesTransformer;","var replaceSubstitutionTransformer = function replaceSubstitutionTransformer(replaceWhat, replaceWith) {\n  return {\n    onSubstitution: function onSubstitution(substitution, resultSoFar) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceSubstitutionTransformer requires at least 2 arguments.');\n      }\n\n      // Do not touch if null or undefined\n      if (substitution == null) {\n        return substitution;\n      } else {\n        return substitution.toString().replace(replaceWhat, replaceWith);\n      }\n    }\n  };\n};\nexport default replaceSubstitutionTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport splitStringTransformer from '../splitStringTransformer';\nimport removeNonPrintingValuesTransformer from '../removeNonPrintingValuesTransformer';\nvar html = new TemplateTag(splitStringTransformer('\\n'), removeNonPrintingValuesTransformer, inlineArrayTransformer, stripIndentTransformer, trimResultTransformer);\nexport default html;","/**\n * Replaces tabs, newlines and spaces with the chosen value when they occur in sequences\n * @param  {(String|RegExp)} replaceWhat - the value or pattern that should be replaced\n * @param  {*}               replaceWith - the replacement value\n * @return {Object}                      - a TemplateTag transformer\n */\nvar replaceResultTransformer = function replaceResultTransformer(replaceWhat, replaceWith) {\n  return {\n    onEndResult: function onEndResult(endResult) {\n      if (replaceWhat == null || replaceWith == null) {\n        throw new Error('replaceResultTransformer requires at least 2 arguments.');\n      }\n      return endResult.replace(replaceWhat, replaceWith);\n    }\n  };\n};\nexport default replaceResultTransformer;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport splitStringTransformer from '../splitStringTransformer';\nimport replaceSubstitutionTransformer from '../replaceSubstitutionTransformer';\nvar safeHtml = new TemplateTag(splitStringTransformer('\\n'), inlineArrayTransformer, stripIndentTransformer, trimResultTransformer, replaceSubstitutionTransformer(/&/g, '&amp;'), replaceSubstitutionTransformer(/</g, '&lt;'), replaceSubstitutionTransformer(/>/g, '&gt;'), replaceSubstitutionTransformer(/\"/g, '&quot;'), replaceSubstitutionTransformer(/'/g, '&#x27;'), replaceSubstitutionTransformer(/`/g, '&#x60;'));\nexport default safeHtml;","import TemplateTag from '../TemplateTag';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLine = new TemplateTag(replaceResultTransformer(/(?:\\n(?:\\s*))+/g, ' '), trimResultTransformer);\nexport default oneLine;","import TemplateTag from '../TemplateTag';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineTrim = new TemplateTag(replaceResultTransformer(/(?:\\n\\s*)/g, ''), trimResultTransformer);\nexport default oneLineTrim;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaLists = new TemplateTag(inlineArrayTransformer({\n  separator: ','\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaLists;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaListsOr = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'or'\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaListsOr;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineCommaListsAnd = new TemplateTag(inlineArrayTransformer({\n  separator: ',',\n  conjunction: 'and'\n}), replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineCommaListsAnd;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar inlineLists = new TemplateTag(inlineArrayTransformer, stripIndentTransformer, trimResultTransformer);\nexport default inlineLists;","import TemplateTag from '../TemplateTag';\nimport inlineArrayTransformer from '../inlineArrayTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nimport replaceResultTransformer from '../replaceResultTransformer';\nvar oneLineInlineLists = new TemplateTag(inlineArrayTransformer, replaceResultTransformer(/(?:\\s+)/g, ' '), trimResultTransformer);\nexport default oneLineInlineLists;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar stripIndent = new TemplateTag(stripIndentTransformer, trimResultTransformer);\nexport default stripIndent;","import TemplateTag from '../TemplateTag';\nimport stripIndentTransformer from '../stripIndentTransformer';\nimport trimResultTransformer from '../trimResultTransformer';\nvar stripIndents = new TemplateTag(stripIndentTransformer('all'), trimResultTransformer);\nexport default stripIndents;","/* eslint-disable no-unused-expressions */\nimport { stripIndent } from \"common-tags\"\nimport camelCase from \"camelcase\"\nimport { IGatsbyImageData } from \".\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.substr(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(stripIndent`\n    The requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* eslint-disable no-unused-expressions */\nimport {\n  useState,\n  CSSProperties,\n  useEffect,\n  HTMLAttributes,\n  ImgHTMLAttributes,\n  ReactEventHandler,\n  SetStateAction,\n  Dispatch,\n  RefObject,\n} from \"react\"\nimport { Node } from \"gatsby\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport {\n  IGatsbyImageHelperArgs,\n  generateImageData,\n  Layout,\n  EVERY_BREAKPOINT,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\nconst imageCache = new Set<string>()\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport function storeImageloaded(cacheKey?: string): void {\n  if (cacheKey) {\n    imageCache.add(cacheKey)\n  }\n}\n\nexport function hasImageLoaded(cacheKey: string): boolean {\n  return imageCache.has(cacheKey)\n}\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nexport type ImageDataLike = FileNode | IGatsbyImageDataParent | IGatsbyImageData\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport async function applyPolyfill(\n  ref: RefObject<HTMLImageElement>\n): Promise<void> {\n  if (!(`objectFitPolyfill` in window)) {\n    await import(\n      // @ts-ignore typescript can't find the module for some reason ¯\\_(ツ)_/¯\n      /* webpackChunkName: \"gatsby-plugin-image-objectfit-polyfill\" */ `objectFitPolyfill`\n    )\n  }\n  ;(window as any).objectFitPolyfill(ref.current)\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  toggleLoaded?: (loaded: boolean) => void,\n  cacheKey?: string,\n  ref?: RefObject<HTMLImageElement>,\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  const onLoad: ReactEventHandler<HTMLImageElement> = function (e) {\n    if (isLoaded) {\n      return\n    }\n\n    storeImageloaded(cacheKey)\n\n    const target = e.currentTarget\n    const img = new Image()\n    img.src = target.currentSrc\n\n    if (img.decode) {\n      // Decode the image through javascript to support our transition\n      img\n        .decode()\n        .catch(() => {\n          // ignore error, we just go forward\n        })\n        .then(() => {\n          toggleLoaded(true)\n        })\n    } else {\n      toggleLoaded(true)\n    }\n  }\n\n  // Polyfill \"object-fit\" if unsupported (mostly IE)\n  if (ref?.current && !(`objectFit` in document.documentElement.style)) {\n    ref.current.dataset.objectFit = style.objectFit ?? `cover`\n    ref.current.dataset.objectPosition = `${style.objectPosition ?? `50% 50%`}`\n    applyPolyfill(ref)\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n    onLoad,\n    ref,\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport function useImageLoaded(\n  cacheKey: string,\n  loading: \"lazy\" | \"eager\",\n  ref: any\n): {\n  isLoaded: boolean\n  isLoading: boolean\n  toggleLoaded: Dispatch<SetStateAction<boolean>>\n} {\n  const [isLoaded, toggleLoaded] = useState(false)\n  const [isLoading, toggleIsLoading] = useState(loading === `eager`)\n\n  const rAF =\n    typeof window !== `undefined` && `requestAnimationFrame` in window\n      ? requestAnimationFrame\n      : function (cb: TimerHandler): number {\n          return setTimeout(cb, 16)\n        }\n  const cRAF =\n    typeof window !== `undefined` && `cancelAnimationFrame` in window\n      ? cancelAnimationFrame\n      : clearTimeout\n\n  useEffect(() => {\n    let interval: number\n    // @see https://stackoverflow.com/questions/44074747/componentdidmount-called-before-ref-callback/50019873#50019873\n    function toggleIfRefExists(): void {\n      if (ref.current) {\n        if (loading === `eager` && ref.current.complete) {\n          storeImageloaded(cacheKey)\n          toggleLoaded(true)\n        } else {\n          toggleIsLoading(true)\n        }\n      } else {\n        interval = rAF(toggleIfRefExists)\n      }\n    }\n    toggleIfRefExists()\n\n    return (): void => {\n      cRAF(interval)\n    }\n  }, [])\n\n  return {\n    isLoading,\n    isLoaded,\n    toggleLoaded,\n  }\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\n\nimport React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer: string | null = null\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {\n          // eslint-disable-next-line no-undef\n          SERVER && <NativeScriptLoading />\n        }\n      </Fragment>\n    )\n  }\n","/* eslint-disable filenames/match-regex */\nimport React, {\n  FunctionComponent,\n  ImgHTMLAttributes,\n  forwardRef,\n  LegacyRef,\n} from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n  innerRef: LegacyRef<HTMLImageElement>\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  innerRef,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n      ref={innerRef}\n    />\n  )\n}\n\nexport const Picture = forwardRef<HTMLImageElement, PictureProps>(\n  function Picture(\n    { fallback, sources = [], shouldLoad = true, ...props },\n    ref\n  ) {\n    const sizes = props.sizes || fallback?.sizes\n    const fallbackImage = (\n      <Image\n        {...props}\n        {...fallback}\n        sizes={sizes}\n        shouldLoad={shouldLoad}\n        innerRef={ref}\n      />\n    )\n\n    if (!sources.length) {\n      return fallbackImage\n    }\n\n    return (\n      <picture>\n        {sources.map(({ media, srcSet, type }) => (\n          <source\n            key={`${media}-${type}-${srcSet}`}\n            type={type}\n            media={media}\n            srcSet={shouldLoad ? srcSet : undefined}\n            data-srcset={!shouldLoad ? srcSet : undefined}\n            sizes={sizes}\n          />\n        ))}\n        {fallbackImage}\n      </picture>\n    )\n  }\n)\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React, { forwardRef } from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage = forwardRef<HTMLImageElement, MainImageProps>(\n  function MainImage(props, ref) {\n    return (\n      <>\n        <Picture ref={ref} {...props} />\n        <noscript>\n          <Picture {...props} shouldLoad={true} />\n        </noscript>\n      </>\n    )\n  }\n)\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React, {\n  ElementType,\n  FunctionComponent,\n  CSSProperties,\n  WeakValidationMap,\n} from \"react\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImageHydrator: FunctionComponent<{\n  as?: ElementType\n  style?: CSSProperties\n  className?: string\n}> = function GatsbyImageHydrator({ as: Type = `div`, children, ...props }) {\n  return <Type {...props}>{children}</Type>\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n    if (preactClass) {\n      className = preactClass\n    }\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return (\n      <GatsbyImageHydrator\n        {...wrapperProps}\n        as={as}\n        style={{\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n      >\n        <LayoutWrapper layout={layout} width={width} height={height}>\n          <Placeholder\n            {...getPlaceholderProps(\n              placeholder,\n              false,\n              layout,\n              width,\n              height,\n              placeholderBackgroundColor,\n              objectFit,\n              objectPosition\n            )}\n          />\n\n          <MainImage\n            data-gatsby-image-ssr=\"\"\n            className={imgClassName}\n            {...(props as Omit<MainImageProps, \"images\" | \"fallback\">)}\n            // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n            {...getMainProps(\n              loading === `eager`,\n              false,\n              cleanedImages,\n              loading,\n              undefined,\n              undefined,\n              undefined,\n              imgStyle\n            )}\n          />\n        </LayoutWrapper>\n      </GatsbyImageHydrator>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","/* eslint-disable no-unused-expressions */\nimport React, {\n  Component,\n  ElementType,\n  createRef,\n  MutableRefObject,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  RefObject,\n  CSSProperties,\n} from \"react\"\nimport {\n  getWrapperProps,\n  hasNativeLazyLoadSupport,\n  storeImageloaded,\n  hasImageLoaded,\n  gatsbyImageIsInstalled,\n} from \"./hooks\"\nimport { PlaceholderProps } from \"./placeholder\"\nimport { MainImageProps } from \"./main-image\"\nimport { Layout } from \"../image-utils\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport { Unobserver } from \"./intersection-observer\"\nimport { render } from \"react-dom\"\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: () => void\n  onError?: () => void\n  onStartLoad?: (props: { wasCached?: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nclass GatsbyImageHydrator extends Component<\n  GatsbyImageProps,\n  { isLoading: boolean; isLoaded: boolean }\n> {\n  root: RefObject<HTMLImageElement | undefined> = createRef<\n    HTMLImageElement | undefined\n  >()\n  hydrated: MutableRefObject<boolean> = { current: false }\n  forceRender: MutableRefObject<boolean> = {\n    // In dev we use render not hydrate, to avoid hydration warnings\n    current: process.env.NODE_ENV === `development`,\n  }\n  lazyHydrator: () => void | null = null\n  ref = createRef<HTMLImageElement>()\n  unobserveRef: Unobserver\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLoading: hasNativeLazyLoadSupport(),\n      isLoaded: false,\n    }\n  }\n\n  _lazyHydrate(props, state): Promise<void> {\n    const hasSSRHtml = this.root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    )\n    // On first server hydration do nothing\n    if (hasNativeLazyLoadSupport() && hasSSRHtml && !this.hydrated.current) {\n      this.hydrated.current = true\n      return Promise.resolve()\n    }\n\n    return import(`./lazy-hydrate`).then(({ lazyHydrate }) => {\n      const cacheKey = JSON.stringify(this.props.image.images)\n      this.lazyHydrator = lazyHydrate(\n        {\n          image: props.image.images,\n          isLoading: state.isLoading || hasImageLoaded(cacheKey),\n          isLoaded: state.isLoaded || hasImageLoaded(cacheKey),\n          toggleIsLoaded: () => {\n            props.onLoad?.()\n\n            this.setState({\n              isLoaded: true,\n            })\n          },\n          ref: this.ref,\n          ...props,\n        },\n        this.root,\n        this.hydrated,\n        this.forceRender\n      )\n    })\n  }\n\n  /**\n   * Choose if setupIntersectionObserver should use the image cache or not.\n   */\n  _setupIntersectionObserver(useCache = true): void {\n    import(`./intersection-observer`).then(({ createIntersectionObserver }) => {\n      const intersectionObserver = createIntersectionObserver(() => {\n        if (this.root.current) {\n          const cacheKey = JSON.stringify(this.props.image.images)\n          this.props.onStartLoad?.({\n            wasCached: useCache && hasImageLoaded(cacheKey),\n          })\n          this.setState({\n            isLoading: true,\n            isLoaded: useCache && hasImageLoaded(cacheKey),\n          })\n        }\n      })\n\n      if (this.root.current) {\n        this.unobserveRef = intersectionObserver(this.root)\n      }\n    })\n  }\n\n  shouldComponentUpdate(nextProps, nextState): boolean {\n    let hasChanged = false\n    if (!this.state.isLoading && nextState.isLoading && !nextState.isLoaded) {\n      // Props have changed between SSR and hydration, so we need to force render instead of hydrate\n      this.forceRender.current = true\n    }\n    // this check mostly means people do not have the correct ref checks in place, we want to reset some state to suppport loading effects\n    if (this.props.image.images !== nextProps.image.images) {\n      // reset state, we'll rely on intersection observer to reload\n      if (this.unobserveRef) {\n        // unregister intersectionObserver\n        this.unobserveRef()\n\n        // // on unmount, make sure we cleanup\n        if (this.hydrated.current && this.lazyHydrator) {\n          render(null, this.root.current)\n        }\n      }\n\n      this.setState(\n        {\n          isLoading: false,\n          isLoaded: false,\n        },\n        () => {\n          this._setupIntersectionObserver(false)\n        }\n      )\n\n      hasChanged = true\n    }\n\n    if (this.root.current && !hasChanged) {\n      this._lazyHydrate(nextProps, nextState)\n    }\n\n    return false\n  }\n\n  componentDidMount(): void {\n    if (this.root.current) {\n      const ssrElement = this.root.current.querySelector(\n        `[data-gatsby-image-ssr]`\n      ) as HTMLImageElement\n      const cacheKey = JSON.stringify(this.props.image.images)\n\n      // when SSR and native lazyload is supported we'll do nothing ;)\n      if (\n        hasNativeLazyLoadSupport() &&\n        ssrElement &&\n        gatsbyImageIsInstalled()\n      ) {\n        this.props.onStartLoad?.({ wasCached: false })\n\n        // When the image is already loaded before we have hydrated, we trigger onLoad and cache the item\n        if (ssrElement.complete) {\n          this.props.onLoad?.()\n          storeImageloaded(cacheKey)\n        } else {\n          // We need the current class context (this) inside our named onLoad function\n          // The named function is necessary to easily remove the listener afterward.\n          // eslint-disable-next-line @typescript-eslint/no-this-alias\n          const _this = this\n          // add an onLoad to the image\n          ssrElement.addEventListener(`load`, function onLoad() {\n            ssrElement.removeEventListener(`load`, onLoad)\n\n            _this.props.onLoad?.()\n            storeImageloaded(cacheKey)\n          })\n        }\n\n        return\n      }\n\n      // Fallback to custom lazy loading (intersection observer)\n      this._setupIntersectionObserver(true)\n    }\n  }\n\n  componentWillUnmount(): void {\n    // Cleanup when onmount happens\n    if (this.unobserveRef) {\n      // unregister intersectionObserver\n      this.unobserveRef()\n\n      // on unmount, make sure we cleanup\n      if (this.hydrated.current && this.lazyHydrator) {\n        this.lazyHydrator()\n      }\n    }\n\n    return\n  }\n\n  render(): JSX.Element {\n    const Type = this.props.as || `div`\n    const { width, height, layout } = this.props.image\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    let className = this.props.className\n    // preact class\n    if (this.props.class) {\n      className = this.props.class\n    }\n\n    const sizer = getSizer(layout, width, height)\n\n    return (\n      <Type\n        {...wrapperProps}\n        style={{\n          ...wStyle,\n          ...this.props.style,\n          backgroundColor: this.props.backgroundColor,\n        }}\n        className={`${wClass}${className ? ` ${className}` : ``}`}\n        ref={this.root}\n        dangerouslySetInnerHTML={{\n          __html: sizer,\n        }}\n        suppressHydrationWarning\n      />\n    )\n  }\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n    const { className, class: classSafe, backgroundColor, image } = props\n    const { width, height, layout } = image\n    const propsKey = JSON.stringify([\n      width,\n      height,\n      layout,\n      className,\n      classSafe,\n      backgroundColor,\n    ])\n    return <GatsbyImageHydrator key={propsKey} {...props} />\n  }\n\nGatsbyImage.propTypes = propTypes\n\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import { Link } from 'gatsby';\nimport get from 'lodash/get';\nimport React from 'react';\nimport { StaticImage } from \"gatsby-plugin-image\"\n\nconst classes = {\n  wrapper: 'block mb-6 md:flex',\n  imageWrapper: 'w-full max-w-150',\n  image: 'rounded-full transform transition-all duration-150 hover:scale-105',\n  contentWrapper: 'flex-none pt-6 md:pt-1 md:flex-1 md:pl-20',\n  name: 'text-5xl text-gray-900 font-bold leading-tight hover:text-black',\n  description: 'text-gray-600',\n  list: 'mt-6 uppercase tracking-wider',\n  item: 'inline list-none pr-4',\n  link:\n    'inline-block py-2 font-semibold text-xs text-gray-600 hover:text-black',\n};\n\nconst Header = ({ metadata = {}, noBlog = false }) => {\n  const email = get(metadata, 'email', false)\n  const medium = get(metadata, 'author', false);\n  const github = get(metadata, 'github', false);\n  const linkedin = get(metadata, 'linkedin', false);\n  const resume = get(metadata, 'resume', false);\n\n  return (\n    <div className={classes.wrapper}>\n      <div className={classes.imageWrapper}>\n        <Link to=\"/\">\n          <StaticImage\n            src=\"../../images/profile.jpeg\"\n            alt={metadata.name || \"Profile\"}\n            className={classes.image}\n            placeholder=\"blurred\"\n            layout=\"fixed\"\n            width={200}\n            height={200}\n          />\n        </Link>\n      </div>\n      <div className={classes.contentWrapper}>\n        <h1 className={classes.name}>\n          <Link to=\"/\">{metadata.name}</Link>\n        </h1>\n        <br/>\n        <p className={classes.description}>{metadata.description}</p>\n        <ul className={classes.list}>\n          {email && (\n            <li className={classes.item}>\n              <a className={classes.link} href={`mailto:${email}`}>\n                Email\n              </a>\n            </li>\n          )}\n          {medium && (\n            <li className={classes.item}>\n              <a className={classes.link} href={medium}>\n                Medium\n              </a>\n            </li>\n          )}\n          {linkedin && (\n            <li className={classes.item}>\n              <a className={classes.link} href={linkedin}>\n                LinkedIn\n              </a>\n            </li>\n          )}\n          {github && (\n            <li className={classes.item}>\n              <a className={classes.link} href={github}>\n                GitHub\n              </a>\n            </li>\n          )}\n          {resume && (\n            <li className={classes.item}>\n              <a className={classes.link} href={resume}>\n                Résumé\n              </a>\n            </li>\n          )}\n          {!noBlog && (\n            <li className={classes.item}>\n              <Link className={classes.link} to=\"/blog\">\n                Blog\n              </Link>\n            </li>\n          )}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Header;\n","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n","var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n","var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n","var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n","var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n","var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n","var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n","var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n","var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n","var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n","var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n","var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n","var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n","var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n","var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","map","x","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","strings","raw","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","prototype","_templateObject","freeze","value","TemplateTag","_this","this","_len","arguments","transformers","_key","instance","_classCallCheck","tag","_len2","expressions","_key2","interimTag","bind","transformEndResult","transformString","reduce","processSubstitutions","transformer","previousTag","template","_len3","substitutions","_key3","apply","undefined","concat","resultSoFar","remainingPart","substitution","transformSubstitution","shift","str","res","transform","onString","onSubstitution","endResult","onEndResult","defaults","separator","conjunction","serial","opts","arrayLength","indent","match","separatorIndex","lastIndexOf","type","Math","min","arr","arr2","from","_toConsumableArray","el","regexp","RegExp","Error","side","splitBy","includes","split","isValidValue","Number","isNaN","replaceWhat","replaceWith","toString","Set","I","HTMLImageElement","O","GATSBY___IMAGE","W","t","add","z","has","C","e","r","a","n","o","s","l","d","current","document","documentElement","style","dataset","objectFit","objectPosition","window","objectFitPolyfill","Promise","resolve","then","reject","c","height","left","position","top","transition","width","willChange","loading","shouldLoad","opacity","onLoad","currentTarget","Image","src","currentSrc","decode","catch","ref","q","backgroundColor","bottom","right","F","V","G","layout","paddingTop","maxWidth","display","alt","role","U","children","p","B","J","Y","srcSet","innerRef","decoding","X","fallback","sources","sizes","u","media","propTypes","isRequired","displayName","Z","K","Q","$","call","tt","image","et","rt","root","hydrated","forceRender","lazyHydrator","unobserveRef","state","isLoading","isLoaded","create","constructor","h","_lazyHydrate","querySelector","lazyHydrate","JSON","stringify","images","toggleIsLoaded","setState","_setupIntersectionObserver","createIntersectionObserver","onStartLoad","wasCached","shouldComponentUpdate","componentDidMount","complete","addEventListener","removeEventListener","componentWillUnmount","render","as","overflow","verticalAlign","className","class","dangerouslySetInnerHTML","__html","suppressHydrationWarning","it","at","nt","ot","st","lt","__imageData","__error","console","warn","classes","_ref","metadata","noBlog","email","get","medium","github","linkedin","resume","React","Link","to","StaticImage","name","placeholder","description","href","hashClear","hashDelete","hashGet","hashHas","hashSet","Hash","entries","index","clear","entry","set","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","Map","getNative","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","Symbol","array","iteratee","result","eq","castPath","toKey","object","path","getRawTag","objectToString","symToStringTag","toStringTag","isFunction","isMasked","isObject","toSource","reIsHostCtor","funcProto","Function","objectProto","funcToString","hasOwnProperty","reIsNative","arrayMap","isSymbol","symbolProto","symbolToString","baseToString","isKey","stringToPath","coreJsData","freeGlobal","g","isKeyable","data","__data__","baseIsNative","getValue","nativeObjectToString","isOwn","unmasked","nativeCreate","size","reIsDeepProp","reIsPlainProp","uid","maskSrcKey","exec","keys","IE_PROTO","func","assocIndexOf","splice","pop","push","getMapData","memoize","cache","freeSelf","self","memoizeCapped","rePropName","reEscapeChar","charCodeAt","number","quote","subString","other","baseGet","defaultValue","baseGetTag","isObjectLike","resolver","memoized","args","Cache"],"sourceRoot":""}